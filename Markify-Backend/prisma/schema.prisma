// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String       @id @default(cuid())
  name             String
  email            String       @unique
  password         String
  avatar           String?
  isSubscribed     Boolean      @default(false)
  subscriptionEnds DateTime?
  bookmarks        Bookmark[]
  collections      Collection[] // Add relation to collections
}

// Add this new model for Collections
model Collection {
  id        String     @id @default(cuid())
  name      String
  user      User       @relation(fields: [userId], references: [id])
  userId    String
  bookmarks Bookmark[]

  @@unique([userId, name]) // A user cannot have two collections with the same name
}

model Bookmark {
  id            String      @id @default(cuid())
  user          User        @relation(fields: [userId], references: [id])
  userId        String
  title         String
  url           String
  description   String
  category      String
  tags          String?
  isFavorite    Boolean     @default(false)
  previewImage  String?
  favicon       String?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  // Add these two lines to connect a bookmark to a collection
  collection    Collection? @relation(fields: [collectionId], references: [id], onDelete: SetNull)
  collectionId  String?

  // A user cannot have two bookmarks with the same title
  @@unique([userId, title])
}